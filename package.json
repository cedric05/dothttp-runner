{
	"name": "dothttp-code",
	"displayName": "Dothttp Http Client",
	"description": "A Http Client for sending to and receiving from http endpoints (dothttp)",
	"version": "0.0.29",
	"license": "Apache-2.0",
	"publisher": "shivaprasanth",
	"repository": {
		"url": "https://github.com/cedric05/dothttp-runner"
	},
	"icon": "rocket.png",
	"engines": {
		"vscode": "^1.50.0"
	},
	"categories": [
		"Programming Languages",
		"Notebooks"
	],
	"activationEvents": [
		"onLanguage:dothttp-vscode",
		"workspaceContains:**/*.http",
		"workspaceContains:**/*.httpbook",
		"workspaceContains:**/*.hnbk",
		"onView:dothttpEnvView",
		"onCommand:dothttp.command.run",
		"onView:dothttpPropView",
		"onView:dothttpHistory",
		"onCommand:dothttp.command.run",
		"onCommand:dothttp.command.gencurl",
		"onCommand:dothttp.command.toggle.reuse",
		"onCommand:dothttp.command.toggle.runrecent",
		"onCommand:dothttp.command.toggle.experimental",
		"onCommand:dothttp.command.toggle.showheaders",
		"onCommand:dothttp.command.toggle.history",
		"onCommand:dothttp.command.toggle.nocookie",
		"onCommand:dothttp.command.import.external",
		"onCommand:dothttpEnvView.refresh",
		"onCommand:dothttpEnvView.enableenv",
		"onCommand:dothttpEnvView.disableenv",
		"onCommand:dothttpPropView.add",
		"onCommand:dothttpPropView.enableproperty",
		"onCommand:dothttpPropView.disableproperty",
		"onCommand:dothttpPropView.copyPropertyValue",
		"onCommand:dothttpPropView.updateproperty",
		"onCommand:dothttpPropView.disableAllProperties",
		"onCommand:dothttpEnvView.disableAllEnv",
		"onCommand:dothttpPropView.removeproperty",
		"onCommand:dothttpEnvView.opendothttpjson",
		"onCommand:dothttpEnvView.copyPropertyValue",
		"onCommand:dothttp.command.generatelang"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"notebooks": [
			{
				"viewType": "dothttp-book",
				"type": "dothttp-book",
				"displayName": "DOTHTTP",
				"selector": [
					{
						"filenamePattern": "*.httpbook"
					},
					{
						"filenamePattern": "*.hnbk"
					}
				]
			}
		],
		"languages": [
			{
				"id": "dothttp-vscode",
				"aliases": [
					"dothttp-vscode"
				],
				"extensions": [
					".http",
					".dhttp"
				],
				"configuration": "./language-configuration.json"
			},
			{
				"id": "jsonc",
				"extensions": [
					".dothttp.json"
				],
				"filenames": [
					".dothttp.json"
				],
				"filenamePatterns": [
					"*.dothttp.json"
				]
			}
		],
		"grammars": [
			{
				"language": "dothttp-vscode",
				"scopeName": "source.dothttp-vscode",
				"path": "./syntaxes/dothttp.tmLanguage.json",
				"embeddedLanguages": {
					"source.js": "javascript"
				}
			}
		],
		"notebookRenderer": [
			{
				"id": "dothttp-book",
				"displayName": "dothttp Renderer",
				"entrypoint": "./dist/renderer.js",
				"requiresMessaging": "always",
				"mimeTypes": [
					"x-application/dotbook"
				]
			}
		],
		"jsonValidation": [
			{
				"fileMatch": ".dothttp.json",
				"url": "./schemas/dothttp-env.schema.json"
			}
		],
		"commands": [
			{
				"command": "dothttp.command.run",
				"title": "Dothttp Run Target",
				"icon": "$(rocket)",
				"category": "Dothttp"
			},
			{
				"command": "dothttp.command.gencurl",
				"title": "Dothttp Generate Curl",
				"icon": "$(mirror)",
				"category": "Dothttp"
			},
			{
				"command": "dothttp.command.toggle.reuse",
				"title": "Toggles Reuse Tab Setting",
				"category": "Dothttp",
				"icon": "$(gear)"
			},
			{
				"command": "dothttp.command.toggle.runrecent",
				"title": "Toggles Run Recent Setting",
				"category": "Dothttp",
				"icon": "$(gear)"
			},
			{
				"command": "dothttp.command.toggle.experimental",
				"title": "Toggles Experimental Setting",
				"category": "Dothttp",
				"icon": "$(gear)"
			},
			{
				"command": "dothttp.command.toggle.showheaders",
				"title": "Toggles Showheaders Setting",
				"category": "Dothttp",
				"icon": "$(gear)"
			},
			{
				"command": "dothttp.command.toggle.history",
				"title": "Toggles History Setting",
				"category": "Dothttp",
				"icon": "$(gear)"
			},
			{
				"command": "dothttp.command.toggle.nocookie",
				"title": "Toggles Cookie Setting",
				"category": "Dothttp",
				"icon": "$(gear)"
			},
			{
				"command": "dothttp.command.import.external",
				"title": "Dothttp Import Resource To Http",
				"category": "Dothttp",
				"icon": "$(cloud-download)"
			},
			{
				"command": "dothttpEnvView.refresh",
				"title": "Refresh",
				"icon": "$(refresh)"
			},
			{
				"command": "dothttpEnvView.enableenv",
				"title": "Enable Environment",
				"icon": "$(add)"
			},
			{
				"command": "dothttpEnvView.disableenv",
				"title": "Disable Environment",
				"icon": "$(remove)"
			},
			{
				"command": "dothttpPropView.add",
				"title": "Add Property",
				"icon": "$(new-file)"
			},
			{
				"command": "dothttpPropView.enableproperty",
				"title": "Enable Property",
				"icon": "$(add)"
			},
			{
				"command": "dothttpPropView.disableproperty",
				"title": "Disable Property",
				"icon": "$(remove)"
			},
			{
				"command": "dothttpPropView.copyPropertyValue",
				"title": "Copy Property Value",
				"icon": "$(chrome-restore)"
			},
			{
				"command": "dothttpPropView.updateproperty",
				"title": "Update Property",
				"icon": "$(edit)"
			},
			{
				"command": "dothttpPropView.disableAllProperties",
				"title": "Disable All Properties",
				"icon": "$(close-all)"
			},
			{
				"command": "dothttpEnvView.disableAllEnv",
				"title": "Disable All Environment",
				"icon": "$(close-all)"
			},
			{
				"command": "dothttpPropView.removeproperty",
				"title": "Remove Property",
				"icon": "$(trash)"
			},
			{
				"command": "dothttpEnvView.opendothttpjson",
				"title": "Open",
				"icon": "$(edit)"
			},
			{
				"command": "dothttpEnvView.copyPropertyValue",
				"title": "Copy Environment Value",
				"icon": "$(chrome-restore)"
			},
			{
				"command": "dothttp.command.generatelang",
				"title": "Dothttp Generate General Programming Languages For Request",
				"icon": "$(extensions)"
			},
			{
				"command": "dothttp.command.restartcli",
				"title": "Dothttp Restart Cli Server",
				"icon": "$(debug-restart)"
			},
			{
				"command": "dothttp.command.export.postman",
				"title": "Dothttp Export Http To Postman",
				"icon": "$(extensions)"
			}
		],
		"menus": {
			"editor/title": [
				{
					"command": "dothttp.command.run",
					"when": "resourceExtname == .http || resourceExtname == .dhttp",
					"group": "navigation@1"
				},
				{
					"command": "dothttp.command.gencurl",
					"when": "resourceExtname == .http || resourceExtname == .dhttp",
					"group": "navigation@2"
				}
			],
			"editor/context": [
				{
					"command": "dothttp.command.export.postman",
					"title": "Dothttp export http to postman",
					"group": "Dothttp",
					"icon": "$(extensions)"
				},
				{
					"command": "dothttp.command.import.external",
					"title": "Dothttp Import Resource To Http",
					"group": "Dothttp",
					"icon": "$(cloud-download)"
				},
				{
					"command": "dothttp.command.generatelang",
					"title": "Dothttp Generate General Programming Languages For Request",
					"group": "Dothttp",
					"icon": "$(extensions)"
				},
				{
					"command": "dothttp.command.run",
					"title": "Dothttp Run Target",
					"icon": "$(rocket)",
					"category": "Dothttp"
				}
			],
			"commandPalette": [
				{
					"command": "dothttp.command.toggle.reuse"
				},
				{
					"command": "dothttp.command.toggle.runrecent"
				},
				{
					"command": "dothttp.command.run",
					"when": "resourceExtname == .http || resourceExtname == .dhttp"
				},
				{
					"command": "dothttp.command.toggle.experimental"
				},
				{
					"command": "dothttp.command.toggle.nocookie"
				},
				{
					"command": "dothttp.command.toggle.history"
				},
				{
					"command": "dothttp.command.toggle.showheaders"
				}
			],
			"view/title": [
				{
					"command": "dothttpEnvView.refresh",
					"when": "view == dothttpEnvView",
					"group": "navigation"
				},
				{
					"command": "dothttpEnvView.opendothttpjson",
					"when": "view == dothttpEnvView",
					"group": "navigation"
				},
				{
					"command": "dothttpEnvView.disableAllEnv",
					"when": "view == dothttpEnvView",
					"group": "navigation"
				},
				{
					"command": "dothttpPropView.add",
					"when": "view == dothttpPropView",
					"group": "navigation"
				},
				{
					"command": "dothttpPropView.disableAllProperties",
					"when": "view == dothttpPropView",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "dothttpEnvView.enableenv",
					"when": "view == dothttpEnvView && viewItem == environment",
					"group": "inline"
				},
				{
					"command": "dothttpEnvView.disableenv",
					"when": "view == dothttpEnvView && viewItem == enabledEnvironment",
					"group": "inline"
				},
				{
					"command": "dothttpEnvView.copyPropertyValue",
					"when": "view == dothttpEnvView && viewItem == property",
					"group": "inline"
				},
				{
					"command": "dothttpPropView.enableproperty",
					"when": "view == dothttpPropView && viewItem == disabled",
					"group": "inline"
				},
				{
					"command": "dothttpPropView.disableproperty",
					"when": "view == dothttpPropView && viewItem == enabled",
					"group": "inline"
				},
				{
					"command": "dothttpPropView.copyPropertyValue",
					"when": "view == dothttpPropView",
					"group": "inline"
				},
				{
					"command": "dothttpPropView.updateproperty",
					"when": "view == dothttpPropView",
					"group": "inline"
				},
				{
					"command": "dothttpPropView.removeproperty",
					"when": "view == dothttpPropView",
					"group": "inline"
				}
			]
		},
		"configuration": [
			{
				"title": "Dothttp Configuration",
				"properties": {
					"dothttp.conf.run.reuseold": {
						"type": "boolean",
						"default": false,
						"description": "Enable it if reusing old tab while running requests is preferred"
					},
					"dothttp.conf.response.savedirectory": {
						"type": "string",
						"default": "./",
						"description": "Provide either absolute path or relative path to current file"
					},
					"dothttp.conf.pythonpath": {
						"type": "string",
						"description": "Python installation location for making requests"
					},
					"dothttp.conf.runrecent": {
						"type": "boolean",
						"default": true,
						"description": "Set true to run most recent otherwise, Target will be picked from quickpick dialogue",
						"$comment": "true means recent"
					},
					"dothttp.conf.path": {
						"type": "string",
						"default": "/usr/bin/dothttp",
						"description": "dothttp installation location"
					},
					"dothttp.conf.experimental": {
						"type": "boolean",
						"default": false,
						"description": "Enables experimental features by setting to `ture`"
					},
					"dothttp.conf.nocookie": {
						"type": "boolean",
						"default": false,
						"description": "Disables cookie save feature by setting to `ture`"
					},
					"dothttp.conf.history": {
						"type": "boolean",
						"default": false,
						"description": "Save history of requests by setting to `ture`"
					},
					"dothttp.conf.curl": {
						"type": "boolean",
						"default": false,
						"description": "Genererate curl command only!"
					},
					"dothttp.conf.showheaders": {
						"type": "boolean",
						"default": false,
						"description": "Show headers in seperate view"
					}
				}
			}
		],
		"views": {
			"dothttp-view-container": [
				{
					"id": "dothttpEnvView",
					"name": "Dothttp Environment",
					"when": "dothttpEnvViewEnabled"
				},
				{
					"id": "dothttpPropView",
					"name": "Dothttp Properties",
					"when": "dothttpPropViewEnabled"
				},
				{
					"id": "dothttpHistory",
					"name": "Dothttp history"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "dothttp-view-container",
					"title": "Dothttp",
					"icon": "$(rocket)"
				}
			]
		},
		"submenus": [
			{
				"id": "dothttp.editor.title.run",
				"label": "Run dotHttp Target",
				"icon": "$(rocket)"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "npm run test-compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/dateformat": "^3.0.1",
		"@types/glob": "^7.1.3",
		"@types/httpsnippet": "^1.23.0",
		"@types/js-yaml": "^4.0.1",
		"@types/json-stringify-safe": "^5.0.0",
		"@types/lodash": "^4.14.168",
		"@types/mime-types": "^2.1.0",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.20.12",
		"@types/semver": "^7.3.4",
		"@types/unzipper": "^0.10.3",
		"@types/uuid": "^8.3.0",
		"@types/vscode-notebook-renderer": "1.57.9",
		"@types/whatwg-url": "^8.2.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"babel-core": "^6.26.3",
		"css-loader": "^5.1.3",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"mongodb": "^3.6.5",
		"style-loader": "^2.0.0",
		"svg-inline-loader": "^0.8.2",
		"ts-loader": "^8.0.14",
		"typescript": "^4.1.3",
		"vscode-codicons": "0.0.14",
		"vscode-test": "^1.5.0",
		"webpack": "^5.26.3",
		"webpack-cli": "^4.5.0",
		"@stoplight/json-schema-sampler": "0.2.0"
	},
	"dependencies": {
		"@types/vscode": "^1.59.0",
		"axios": "^0.21.2",
		"curl-to-har": "^1.0.1",
		"curl-to-postmanv2": "^0.5.1",
		"dateformat": "^4.5.1",
		"httpsnippet": "^1.25.0",
		"json-stringify-safe": "^5.0.1",
		"jsonc-parser": "^3.0.0",
		"mime-types": "^2.1.30",
		"preact": "^10.5.13",
		"semver": "^7.3.4",
		"swagger-to-har2": "^1.0.3",
		"tingodb": "^0.6.1",
		"unzipper": "^0.10.11",
		"uuid": "^8.3.2",
		"whatwg-url": "^8.5.0"
	}
}
